 // prisma/schema.prisma
datasource db {
  provider = "postgresql" // or mysql, sqlite (depending on Render setup)
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String?  @unique
  pin       String   // 4 digit PIN
  wallet    String   @unique
  balance   Float    @default(0) // token balance (MVZx)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  matrix      Matrix[]
  referrals   Referral[] @relation("UserReferrals")
  referredBy  Referral?  @relation("ReferralBy", fields: [referrerId], references: [id])
  referrerId  Int?
  transactions Transaction[]
  withdrawals  Withdrawal[]
}

model Matrix {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  stage     Int
  position  Int
  earnings  Float    @default(0)
  createdAt DateTime @default(now())
}

model Referral {
  id        Int      @id @default(autoincrement())
  referrer  User     @relation("UserReferrals", fields: [referrerId], references: [id])
  referrerId Int
  referred  User     @relation("ReferralBy", fields: [referredId], references: [id])
  referredId Int
  createdAt DateTime @default(now())
}

model Transaction {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  amount    Float
  currency  String   // "NGN" | "USDT" | "BANK"
  mvzxCredited Float @default(0)
  matrixApplied Boolean @default(false)
  status    String   @default("pending") // "pending" | "confirmed"
  createdAt DateTime @default(now())
}

model Withdrawal {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  amount    Float
  method    String   // "NGN" | "USDT"
  account   String   // Bank details or wallet address
  status    String   @default("pending") // "pending" | "approved" | "rejected"
  createdAt DateTime @default(now())
}
