 // prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// User accounts (login, affiliate/referrals, matrix placement)
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  referralCode String @unique
  referredBy   String? // referralCode of sponsor
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  wallet    Wallet?
  payments  Payment[]
  matrix    Matrix[]
}

/// Wallets to hold USDT, MVZx, reserve balances
model Wallet {
  id        String   @id @default(cuid())
  userId    String   @unique
  usdt      Float    @default(0.0)
  mvzx      Float    @default(0.0)
  reserve   Float    @default(0.0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id])
}

/// Payments made by users (token purchases, withdrawals, etc.)
model Payment {
  id        String   @id @default(cuid())
  userId    String
  amount    Float
  token     String   // "USDT" | "MVZX"
  type      String   // "purchase" | "withdrawal" | "reward"
  txHash    String?  // blockchain transaction reference
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

/// Matrix system for affiliate plan
model Matrix {
  id        String   @id @default(cuid())
  userId    String
  stage     Int
  position  Int
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

/// Track referrals
model Referral {
  id        String   @id @default(cuid())
  sponsorId String
  referredId String
  createdAt DateTime @default(now())
}
