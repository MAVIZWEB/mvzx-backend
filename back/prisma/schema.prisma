 generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String?  @unique
  phone          String?  @unique
  pinHash        String
  walletAddress  String   @unique
  balanceMVZx    Float    @default(0)
  createdAt      DateTime @default(now())
  referrerId     Int?
  referrer       User?    @relation("referrals", fields: [referrerId], references: [id])
  referrals      User[]   @relation("referrals")
  matrices       Matrix[]
  purchases      Purchase[]
  withdrawals    Withdrawal[]
}

model Matrix {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields:[userId], references:[id])
  stage     Int
  position  Int      @default(0)
  legsFilled Int     @default(0)
  earnings  Float    @default(0)
  createdAt DateTime @default(now())
}

model Purchase {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields:[userId], references:[id])
  amountNGN  Float
  amountUSDT Float
  units      Int      // number of slot-units (each SLOT_COST_NGN / MVZX_USDT_RATE unit)
  paymentMethod String
  txHash     String?
  approved   Boolean  @default(false)
  createdAt  DateTime @default(now())
}

model Withdrawal {
  id        Int @id @default(autoincrement())
  userId    Int
  user      User @relation(fields:[userId], references:[id])
  amount    Float
  method    String
  dest      String
  status    String @default("pending")
  createdAt DateTime @default(now())
}

model Staking {
  id        Int @id @default(autoincrement())
  userId    Int
  user      User @relation(fields:[userId], references:[id])
  amount    Float
  startAt   DateTime
  unlockAt  DateTime
  claimed   Boolean @default(false)
}
